# .github/workflows/retrain-model.yml
name: Retrain Mask Recommender Model (Production)

on:
  schedule:
    # Run every Saturday at 12:00 AM Eastern Time (5:00 AM UTC)
    - cron: '0 5 * * 6'
  push:
    tags:
      - 'production-recommender-v*'  # Only trigger on production version tags like production-recommender-v0.1.2
    paths:
      - 'python/mask_recommender/training/**'  # Only trigger when training code changes

jobs:
  retrain:
    runs-on: ubuntu-latest
    environment: production  # Use production environment variables
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        # Install mamba
        wget -O Mambaforge.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh"
        bash Mambaforge.sh -b -p $HOME/mambaforge
        source $HOME/mambaforge/bin/activate
        
        # Create environment from environment.yml
        mamba env create -f python/mask_recommender/training/environment.yml
        source activate mask_recommender
    
    - name: Fetch latest data and retrain
      env:
        API_ENDPOINT: ${{ secrets.RAILS_API_ENDPOINT || 'https://www.breathesafe.xyz/facial_measurements_fit_tests.json' }}
      run: |
        cd python/mask_recommender/training
        python train.py
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
    
    - name: Upload model artifacts to S3 (Production)
      run: |
        # Upload with timestamp for versioning
        aws s3 cp python/mask_recommender/training/pymc_trace.nc s3://${{ secrets.S3_BUCKET }}/models/pymc_trace_$(date +%Y%m%d_%H%M%S).nc
        # Upload as latest for production inference Lambda
        aws s3 cp python/mask_recommender/training/pymc_trace.nc s3://${{ secrets.S3_BUCKET }}/models/pymc_trace_latest.nc
        
        # Upload mask data
        aws s3 cp python/mask_recommender/training/mask_data.json s3://${{ secrets.S3_BUCKET }}/models/mask_data_latest.json
        
        # Upload scaler
        aws s3 cp python/mask_recommender/training/scaler.json s3://${{ secrets.S3_BUCKET }}/models/scaler_latest.json
    
    - name: Deploy updated Lambda function
      run: |
        # Update the production Lambda function to use the new model
        aws lambda update-function-code \
          --function-name mask-recommender-inference \
          --image-uri ${{ secrets.ECR_REGISTRY }}/mask-recommender-inference:latest
        
        # Wait for the update to complete
        aws lambda wait function-updated \
          --function-name mask-recommender-inference
    
    - name: Send success notification
      uses: dawidd6/action-send-mail@v3
      if: success()
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Production Mask Recommender Model Updated - ${{ github.event_name == 'schedule' && 'Weekly Auto-Retrain' || github.ref_name }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
        body: |
          The mask recommender model has been successfully retrained and deployed to PRODUCTION.
          
          Trigger: ${{ github.event_name == 'schedule' && 'Weekly Auto-Retrain' || 'Version Tag: ' + github.ref_name }}
          Model artifacts uploaded to S3:
          - Latest trace: s3://${{ secrets.S3_BUCKET }}/models/pymc_trace_latest.nc
          - Timestamped backup: s3://${{ secrets.S3_BUCKET }}/models/pymc_trace_$(date +%Y%m%d_%H%M%S).nc
          - Mask data: s3://${{ secrets.S3_BUCKET }}/models/mask_data_latest.json
          - Scaler: s3://${{ secrets.S3_BUCKET }}/models/scaler_latest.json
          
          The production inference Lambda function has been updated with the new model.
    
    - name: Send failure notification
      uses: dawidd6/action-send-mail@v3
      if: failure()
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Production Mask Recommender Model Training Failed - ${{ github.event_name == 'schedule' && 'Weekly Auto-Retrain' || github.ref_name }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
        body: |
          The mask recommender model training in PRODUCTION failed.
          
          Trigger: ${{ github.event_name == 'schedule' && 'Weekly Auto-Retrain' || 'Version Tag: ' + github.ref_name }}
          Check the GitHub Actions logs for details.
