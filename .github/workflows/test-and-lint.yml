name: Test and Lint

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop, staging ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.9'
        bundler-cache: true

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Set up database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/breathesafe_test
      run: |
        bundle exec rails db:create
        bundle exec rails db:schema:load

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/breathesafe_test
        RAILS_ENV: test
      run: |
        bundle exec rspec spec

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.9'
        bundler-cache: true

    - name: Run RuboCop
      run: |
        bundle exec rubocop --parallel

  python-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        # Install Miniconda (more stable than mamba for CI)
        wget -O miniconda.sh "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
        bash miniconda.sh -b -p $HOME/miniconda
        source $HOME/miniconda/bin/activate

        # Create environment from environment.yml
        conda env create -f python/mask_recommender/inference/environment.yml
        source activate mask-recommender-inference

    - name: Run Python tests
      run: |
        cd python/mask_recommender/inference
        python -m pytest tests/ -v
